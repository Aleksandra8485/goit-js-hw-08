{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,kBAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAAYH,SAASC,cAAc,4BAOnCG,GAA+B,EAAAP,EAAAQ,WAAS,KAC5C,MAAMC,EAAW,CACfC,MAAOL,EAAQM,MACfC,QAASN,EAAUK,OAErBE,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUP,GAAU,GACpE,KAGFQ,OAAMC,iBAAiB,QAAQ,KAC9B,MAAMC,EAAiBN,aAAaO,QAAQ,uBAC5C,GAAID,EAAgB,CAClB,MAAME,EAAiBN,KAAKO,MAAMH,GAClCd,EAAQM,MAAQU,EAAeX,MAC/BJ,EAAUK,MAAQU,EAAeT,O,KAKpCP,EAAOa,iBAAiB,QAASX,GAClCD,EAAUY,iBAAiB,QAASX,GAGnCL,EAAMgB,iBAAiB,UAAUK,IAChCA,EAAEC,iBAGD,MAAKd,EAAQL,EAAQM,MAChBC,EAAUN,EAAUK,MAG1BN,EAAQM,MAAQ,GAChBL,EAAUK,MAAQ,GAGlBE,aAAaY,WAAW,uBAGxBC,QAAQC,IAAI,SAAUjB,GACtBgB,QAAQC,IAAI,WAAYf,EAAQ","sources":["src/js/03-feedback.js"],"sourcesContent":["// importowanie throttle\nimport { throttle } from 'lodash';\n\n// Pobieranie formularza\nconst formEl = document.querySelector('.feedback-form');\nconst emailEl = document.querySelector('input[name=\"email\"]');\nconst messageEl = document.querySelector('textarea[name=\"message\"]');\n\n// 2 wersja pobieranie pól formularza\n// const emailEl = formEl.querySelector('input[name=\"email\"]');\n// const messageEl = formEl.querySelector('textarea[name=\"message\"]');\n\n//użycie throttle jako funkcji aktualizującej dane w local storage,\nconst updateFormDataToLocalStorage = throttle(() => {\n  const formData = {\n    email: emailEl.value,\n    message: messageEl.value,\n  };\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}, 500);\n\n// Sprawdzenie stanu local storage podczas ładowania strony\nwindow.addEventListener('load', () => {\n  const storedFormData = localStorage.getItem('feedback-form-state');\n  if (storedFormData) {\n    const parsedFormData = JSON.parse(storedFormData);\n    emailEl.value = parsedFormData.email;\n    messageEl.value = parsedFormData.message;\n  }\n});\n\n// Nasłuchiwanie zdarzenia input na polach formularza z wykorzystaniem throttle\nemailEl.addEventListener('input', updateFormDataToLocalStorage);\nmessageEl.addEventListener('input', updateFormDataToLocalStorage);\n\n// Nasłuchiwanie zdarzenia submit na formularzu\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  // Pobieranie aktualnych danych z pól formularza\n  const email = emailEl.value;\n  const message = messageEl.value;\n\n  // Czyszczenie pól formularza\n  emailEl.value = '';\n  messageEl.value = '';\n\n  // Czyszczenie local storage\n  localStorage.removeItem('feedback-form-state');\n\n  // Wypisanie danych do konsoli\n  console.log('Email:', email);\n  console.log('Message:', message);\n});\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$formEl","document","querySelector","$945622fd0f572e60$var$emailEl","$945622fd0f572e60$var$messageEl","$945622fd0f572e60$var$updateFormDataToLocalStorage","throttle","formData","email","value","message","localStorage","setItem","JSON","stringify","window","addEventListener","storedFormData","getItem","parsedFormData","parse","e","preventDefault","removeItem","console","log"],"version":3,"file":"03-feedback.331e4c2a.js.map"}